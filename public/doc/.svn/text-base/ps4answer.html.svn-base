<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
        "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
    <title>Problem set 4 Answer</title>
</head>
<body>

<!-- Sample structure --> <!--------------------------------------------------------------------------------------------------------------------------------------------->

<h2>Problem set 4 Answer</h2>
<h2>Structure</h2>
<dd>
<h4>Content</h4>

Potential content available from the site:   <br/>
    <ul>
•	Timetable, the major function of the website to create the timetable for student and instructor    <br/>
•	Knowledge by instructor or any student in that course.                                      <br/>
•	Make up class, given the useful function to make a make-up class more easily than ever.      <br/>
•	Forum, comments on course, discussion, surveys, votes, questions and answers to questions.   <br/>
•	Course resources, an information about the course that student registered. <br/>
    </ul>
    As detailed in planning we hope our website can be useful to AIT student and instructor,
    we also plan that our website might be integrated in registration website.      <br/>

<h4>Technology</h4>
The site will use the thin server with ruby on rails as the scripting language and PostgresSQL as the backend.   <br/>
The basic information processing requirements:<br/>
    <ul>
•	User database, including student, instructor, admin and staff, storing their information.
    Especially about student will be stored their registered course which is useful to create timetable for them
    and useful for instructor to propose a make-up class.          <br/>
•	Course database, storing the course description with version information.   <br/>
•	Timetable, processing from student's registered course, can tell whether there is collision or not.
    Also, this process will be used by the instructor to create make-up class.
    Staff can edit the course's time when it is necessary.                  <br/>
•	The student and instructor user will be notified when comments or responses are posted, interesting ratings, and so on.<br/>
•	The instructor can create a poll to get voting from his/her students.
    Sometimes instructor may need some opinion from his/her students, so this process will make us more a community.<br/>
•	The instructor can see which student study in his/her course by selecting from course database. 
    </ul>        
</dd>

<!-- Exercise 1 --> <!--------------------------------------------------------------------------------------------------------------------------------------------->

<h2>Exercise 1: Data Model</h2>
<pre><dd>
Create table users(
&nbsp; &nbsp;    user_id				integer not null primary key,
&nbsp; &nbsp;    login				varchar(50),
&nbsp; &nbsp;    name				varchar(50),
&nbsp; &nbsp;    email				varchar(50),
&nbsp; &nbsp;    crypted_password			varchar(50),
&nbsp; &nbsp;    salt				varchar(50),
&nbsp; &nbsp;    created_at			datetime,
&nbsp; &nbsp;    updated_at			datetime,
&nbsp; &nbsp;    remember_token			varchar(50),
&nbsp; &nbsp;    remember_token_expires_at	datetime,
&nbsp; &nbsp;    activation_code			varchar(50),
&nbsp; &nbsp;    activated_at			datetime,
&nbsp; &nbsp;    state				varchar(50),
&nbsp; &nbsp;    deleted_at			datetime,

);

Create table groups(
&nbsp; &nbsp;    group_id				integer not null primary key,
&nbsp; &nbsp;    group_name			varchar(50),
&nbsp; &nbsp;    created_at			datetime,
&nbsp; &nbsp;    updated_at			datetime,
);

Create table user_groups(
&nbsp; &nbsp;    user_id				not null references users,
&nbsp; &nbsp;    group_id				not null references groups,
&nbsp; &nbsp;    created_at			datetime,
&nbsp; &nbsp;    updated_at			datetime,
);<br/>
</dd></pre>


<img src="/timetable/doc/datamodel.jpg" width="900">
<!--<img src="D:\Projects\Rubymine\web10_09\branches\timetable\public\doc\datamodel.jpg" width="900">-->
<br/><br/>

<dd>Questions:
<li>1. Do you store users' passwords in the database encrypted or nonencrypted?</li>
&nbsp; &nbsp; A : Yes, We do store users' passwords in the database encrypted.

<li>2. What are the advantages and disadvantages of encryption?</li>
&nbsp; &nbsp;
    A : <br/>
    <b>Advantage</b> <br/>
&nbsp; &nbsp;	Encryption makes the password or secure information be confidential. So that other people could not see it even the administrator.   <br/>
	<b>Disdvantage</b>  <br/>
&nbsp; &nbsp;	In order to check password with the encrypted one, computer needs to do encryption of the entered password again. So it needs some computation time.<br/>
&nbsp; &nbsp;	If the encryption key is lost, it is unable to recover the password or secure information.<br/>
<li>3. What columns in your tables will enable your system to handle the query "Find me users who live within 50 kilometers of User 37"?</li>
&nbsp; &nbsp; A : Column 'address'. We can find the user who live within 50 kilometers of the user 37 by query all users who live in the same city or same zip code.</li>
</dd>

<!-- Exercise 2 --> <!--------------------------------------------------------------------------------------------------------------------------------------------->

<h2>Exercise 2: Page flow</h2>

<img src="/timetable/doc/pageflow.jpg" width="1003"> 
<!--<img src="D:\Projects\Rubymine\web10_09\branches\timetable\public\doc\pageflow.jpg" width="1003">-->

<!-- Exercise 3 --> <!--------------------------------------------------------------------------------------------------------------------------------------------->

<h2>Exercise 3: </h2>
<dd>Questions:<br/>
<li>1. Can someone sniffing packets learn your user’s password?</li>
&nbsp; &nbsp; A : No, they cannot because our system has secure socket layer(SSL).<br/>

<li>2. Gain access to the site under your user's credentials?</li>
&nbsp; &nbsp; A : As our system has secure socket layer(SSL), then gaining access to the site under our user's credentials must be unavailable.  <br/>                       

<li>3. What happens to a user who forgets his or her password? </li>
&nbsp; &nbsp; A : He can reset his password by click forget password link, and then confirm to reset password by using email which he/she registered. Then our system will send him/her an email attach with new password. The user can use new password to login and then they can set any favourite password after that.<br/>
</dd>

<!-- Exercise 4 --> <!--------------------------------------------------------------------------------------------------------------------------------------------->

<h2>Exercise 4: </h2>
<dd>Questions: <br/>
<li>1. How can the administrator control who is permitted to register and use the site?</li>
&nbsp; &nbsp; A : Administrator will control who is permitted to register and use the site by valid email. Anyone who have a valid email, then they can use our website. But we also still have some plan about checking valid AIT student id in the future, then our website resource can be specific useful for our student. This way will clean out any spam or anyone who has not a good purpose. <br/>
&nbsp; &nbsp; &nbsp; &nbsp; However, this method is only purpose on the first time user register, but after that the administrator will control any user by ways below when the administrator think any one might be suspicious.<br/>
(1) See recently registered users. <br/>
(2) Look up a particular user. <br/>
(3) Exclude a user from the site when the administrator can see that user might be harmful to the community.<br/>
(4) See current and historical statistics on user registration for checking whether the system is normal.<br/>

<li>2. What email notification options does the site administrator have that relate to user registration?</li>
&nbsp; &nbsp; A : When a new user register to the website, the site administrator will send the email to the user email for verifying that he/she is the real one not the spam or robot. If user can verify from the email that our system sent to him/her, then that user has authorize to log in to our website via his/her username and password.<br/>
</dd>

<!-- Exercise 5 --> <!--------------------------------------------------------------------------------------------------------------------------------------------->

<h2>Exercise 5:   </h2>
<dd>Questions:<br/>
<li>1. How long will it take to look up a user by email address?   </li>
&nbsp; &nbsp; A : It will take around 43ms for searching in our database table.			<br/>
<li>2. What if this email address is capitalized differently from what you've stored in the database?    </li>
&nbsp; &nbsp; A : There is nothing different, because we have a function to convert any string to lower case.			<br/>
<li>3. Is it possible to have two users with the same email address? (Note that by Internet standards a lowercase email address or hostname is the same as an uppercase email address or hostname.)</li>
&nbsp; &nbsp; A : It is impossible, because every email id must belong to specific user, so one user absolutely cannot use the same email compare to another user.	<br/>
<li>4. Many Web applications contain content that can be viewed only by members of a specific user group. With your data model, how many table rows will the RDBMS have to examine to answer the question "Is User 541 a member of Group 90"?   </li> 
&nbsp; &nbsp; A : In our data model will have a table called "user_group" which is used to store relation between user and group. Therefore, we will use a SQL query statment "select count(*) as count_number from usergroup where userid = 541 and groupid = 90". The result will be only row to be examine. If the "count_number" in the result row is equal to zero, this means that the user 541 is not in group 90. Otherwise, the user 541 is in group 90.  		<br/>
<li>5. If the answer is "every row in a big table," that is, a sequential scan, what kind of index could you add to speed up the query?   </li>
&nbsp; &nbsp; A : In case of using sequential scan through a big table, indexing on user_id and group_id would make the search is faster. 			<br/>
</dd>


</body>
</html>
